{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 判断传参是否为对象\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n\n// Object.defineProperty的特定简写 不可枚举\nexport function def(data, key, value) {\n    Object.defineProperty(data, key, {\n        enumerable: false,\n        configurable: false,\n        value\n    })\n}","// 重新数组的常用API\n// push shfit unshift pop reverse sort splice 会导致数组本身产生变化的API都要处理\n\n\nlet oldArrayPrototye = Array.prototype\n\nexport let arrayMethods = Object.create(oldArrayPrototye)\n\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'reverse',\n    'sort',\n    'splice'\n]\n\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        const result = oldArrayPrototye[method].apply(this, args) // this指向value？？？\n        let ob = this.__ob__\n        // 不管删除类的API，只看添加或者修改数组的API\n        let inserted // 用户插入的元素\n        switch (method) {\n            case 'push':\n            case 'splice':\n                inserted = args\n                break;\n            case 'splice': // 删除 修改 新增 arr.splice(0,1, {name: 1})\n                inserted = args.slice(2)\n                break;\n            default:\n                break;\n        }\n        if (inserted) ob.observerArray(inserted) // 观察新插入的对象\n        return result\n    }\n})\n\n","import { isObject, def } from \"../util/index.js\"\nimport { arrayMethods } from './array.js'\n\n// 要承载比较多的方法\n// 当值是数组的时候，索引也会作为key去监听 get 0() get 1()这样是无意义的操作，也会拖慢性能\nclass Observer {\n    constructor(value) {\n        // 把new Observer(data)存放在每一个被监控的对象里 方便复写的数组API能调用观察者的方法\n        // value.__ob__ = this 这是错误的写法，因为定义的__ob__也是一个对象，会造成无限生成__ob__,并无限观察它。解决方法是\n        // Object.defineProperty 不可枚举 不可复写 已封装到def里\n        def(value, '__ob__', this)\n        if (Array.isArray(value)) {\n            // 直接操作数组API的方式，大多数都不是通过操作索引\n            // vm._data.testArr.push({ c: 1 }) 这种操作在没处理的结果是，新增的对象没添加观察，所以要改写数组的常用API，比如push、unshift、shift\n            // 如果数组里面有对象，才会对数组观察，否则是不必要浪费性能的\n            Object.setPrototypeOf(value, arrayMethods)\n            this.observerArray(value)\n        } else {\n            this.walk(value)\n        }\n    }\n    //为什么不在class里继续定义defineReactive 而是新开了一个functio  @question\n    //defineReactive(data) {}\n    walk(data) { // 递归 Object.defineProperty 添加get set\n        let keys = Object.keys(data)\n        keys.forEach(key => {\n            defineReactive(data, key, data[key])\n        })\n    }\n    observerArray(value) { // 观察数组\n        value.forEach(item => {\n            observe(item)\n        })\n    }\n\n\n}\n\nfunction defineReactive(data, key, value) {\n    observe(value)\n    Object.defineProperty(data, key, {\n        get() {\n            return value\n        },\n        set(newVal) {\n            if (newVal === value) { return }\n            // 如果用户手动设置更新了data的对象，那么也要给新对象上的数据进行数据劫持\n            observe(newVal)\n            value = newVal\n        }\n    })\n}\n\nexport function observe(data) {\n    // 如果不是对象的话，就可以直接退出了\n    if (!isObject(data)) {\n        return\n    }\n    return new Observer(data)\n}\n\n\n\n","import { observe } from './observer/index.js'\nexport function initState(vm) {\n    const opts = vm.$options\n\n    // vue文件的 script层 编写顺序 prop data computed watch 生命周期 method 针对传入实例的对应属性做不同的处理\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.methods) {\n        initMethod(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\n\nfunction initProps() { }\nfunction initMethod() { }\nfunction initData(vm) {\n    // 数据初始化工作\n    let data = vm.$options.data\n    data = vm._data = typeof (data) === 'function' ? data.call(vm) : data\n\n    // MVVM 数据劫持 数据驱动视图更新 vue2.0是Object.defineProperty getter setter vue3 proxy\n    observe(data)\n\n}\nfunction initComputed() { }\nfunction initWatch() { }","// 模板字符串：\n// <div id=\"app\">\n//  <p>{{name}}</p>\n// </div>\n\n// 此文件的作用是将template的html字符串转成AST结构\n\n// 需要的正则\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`        // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`  // <aa:bb>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则 <sss 捕获的内容是标签名\nconst startTagClose = /^\\s*(\\/?)>/                   // 匹配标签结束的 >  <div>   \nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/   // 匹配属性 id=\"idName\"\n\nlet root = null // ast语法树的树根\nlet currentParent // 标识当前父亲\nlet stack = [] // 标签字符串数组\nconst ELEMENT_TYPE = 1 // \nconst TEXT_TYPE = 3 // \n\nfunction createASTElement(tagName, attrs) {\n    return {\n        tag: tagName,\n        type: ELEMENT_TYPE,\n        children: [],\n        attrs,\n        parent: null\n    }\n}\n\nfunction start(tagName, attrs) { // 记录开始标签 ，并生成AST树\n    let element = createASTElement(tagName, attrs)\n    if (!root) {\n        root = element\n    }\n    currentParent = element // 当前元素标记成父AST树\n    stack.push(element)\n}\n\nfunction chars(text) { // 文本是 text\n    text = text.replace(/\\s/g, '') // 替换所有的空格为空\n    if (text) {\n        currentParent.children.push({\n            text,\n            type: TEXT_TYPE\n        })\n    }\n}\n\nfunction end(tagName) { // 标签闭合 tagName\n    //console.log(\n    let element = stack.pop() // 拿到栈中的最后一个元素\n    currentParent = stack[stack.length - 1] // 取栈中的最后一个元素 的父级元素\n    if (currentParent) {\n        element.parent = currentParent\n        currentParent.children.push(element)\n    }\n}\n\n\n//advance(***[0].length) 是regExp.match匹配返回第一个参数 \nexport function parserHTML(html) { // 解析HTMLDOM文本 => DOM树（包含属性、子节点、父节点）\n    function parsestartTag() { // 解析开始标签\n        let start = html.match(startTagOpen) // 匹配开始标签头\n        if (start) {\n            advance(start[0].length) // start[0]: <div  将标签从模板字符串中删除\n            const match = {\n                tagName: start[1], // 'div'\n                attrs: []\n            }\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) { // 如果剩下的匹配不到结束标签，则视为有属性，处理属性值的返回\n                advance(attr[0].length) // 将开始标签的属性从模板字符串中删除\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                })\n            }\n            if (end) {\n                advance(end[0].length) // 删除开始标签的>\n                return match // 这才是真正return到外面的结果\n            }\n        }\n    }\n    function advance(n) { // 前进n位 处理html解析的不断更新字符串\n        html = html.substring(n)\n    }\n\n    while (html) { // while 只要循环条件为真，一直执行的特点\n        let textEnd = html.indexOf('<')\n        if (textEnd === 0) { // 是标签的左边 包含开始标签 和结束标签\n            let startTagMatch = parsestartTag() // startTagMatch 包含tagName attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue // 开始标签匹配完毕后  继续下一次 匹配\n            }\n            let endTagMatch = html.match(endTag)\n            if (endTagMatch) {\n                advance(endTagMatch[0].length)\n                end(endTagMatch.tagName)\n                continue\n            }\n        }\n        let text\n        if (textEnd >= 0) { // 包含空白节点的情况\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            chars(text)\n            advance(text.length)\n        }\n    }\n\n    return root\n}","// AST 虚拟dom\nimport { parserHTML } from \"./parser-html\"\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g         // {{ddd}} \n\nfunction generate(el) { // el 是AST语法树\n    console.log(el);\n\n    let children = genChildren(el)\n    let code = `_c(\"${el.tag}\",\n        ${el.attrs.length ? genProps(el.attrs) : undefined // 设置标签属性时 有属性取属性否则取undefined\n        }\n        ${children ? `,${children}` : ''\n        })\n    `\n    return code\n}\n\nfunction genChildren(el) { // 生成孩子 el.chilren 是可以使用的\n    let children = el.children\n    if (children && children.length) {\n        return `${children.map(c => gen(c)).join(',')}`\n    } else {\n        return false\n    }\n}\n\nfunction gen(node) { // node type 1 3 区别是元素节点还是文本节点 递归思想\n    if (node.type === 1) {\n        return generate(node)\n    } else {\n        let text = node.text\n        // 到这一步仍需处理text 可能存在{{}}语法\n        // a {{name}} b {{age}} c \n        // 转化成\n        // _v(\"a\" + _S(name) + \"b\" + _s(age) + \"c\")\n        // 正则存在lastIndex的问题，需重置为0 ？？？\n        // 正则 exec 0: \"{{name}}\" 1: \"name\" index匹配文本的第一个字符的位置\n        let tokens = [] // 待拼接的字符串数组\n        let match, index\n        let lastIndex = defaultTagRE.lastIndex = 0\n\n        while (match = defaultTagRE.exec(text)) {\n            index = match.index\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n        }\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`\n    }\n}\n\nfunction genProps(attrs) { // 生成属性  attrs:[{name: id, value: '**'}] => 多个{id: **}\n    let str = ''\n    attrs.forEach(item => {\n        if (item.name === 'style') {\n            let obj = {}\n            item.value.split(';').forEach((styleItem) => {\n                if (styleItem) {\n                    let splitItem = styleItem.split(':')\n                    obj[splitItem[0]] = splitItem[1]\n                }\n            })\n            str += `{style: ${JSON.stringify(obj)}},`\n        } else {\n            str += `{${item.name}:${item.value}},`\n        }\n    })\n    return str.substring(0, str.length - 1)\n}\n\nexport function compileToFunction(template) {\n    // (1) 解析html字符串 => AST语法树\n    let root = parserHTML(template)\n    // AST语法树 => render函数\n    // 原理：模版引擎？？？\n\n    // html字符串： <div id=\"app\"><p>hello {{name}}</p> test</div>\n    // render函数： _c(\"div\", {id: app}, _c(\"p\", undefined, _v('hello' + _s(name))), _v('hello'))\n\n    let code = generate(root)\n    // 所有的模板引擎的实现 底层原理  new Function () {}  with\n\n    let renderFn = new Function(`with(this){ return ${code}}`)\n    console.log(renderFn)\n    return renderFn\n}","import { initState } from \"./state\"\nimport { compileToFunction } from './compiler/index'\n\nexport function initMixin(Vue) {\n    // vue 原型添加一个init方法\n    Vue.prototype._init = function (options) {\n        // 数据劫持\n        const vm = this\n        vm.$options = options // vue中的this.$options等于 用户传入的属性\n        initState(vm)         // 初始化状态\n\n        // 如果有el的参数，就渲染到节点上 template render\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n\n\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n\n        // render > template > el 渲染优先级\n        if (!options.render) {\n            let template = options.template\n            if (!template && el) {\n                template = el.outerHTML\n            }\n\n            // template => render函数\n            const render = compileToFunction(template)\n            options.render = render\n        }\n\n    }\n}\n","import { initMixin } from './init'\nfunction Vue(options) {\n    // vue的初始化操作\n    this._init(options)\n}\ninitMixin(Vue)\n\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayPrototye","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","ob","__ob__","inserted","slice","observerArray","Observer","isArray","setPrototypeOf","walk","keys","defineReactive","item","observe","get","set","newVal","initState","vm","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","length","parserHTML","html","parsestartTag","match","advance","attr","name","n","substring","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","generate","el","console","log","genChildren","code","genProps","undefined","map","c","gen","join","node","tokens","index","lastIndex","exec","JSON","stringify","trim","str","obj","split","styleItem","splitItem","compileToFunction","template","renderFn","Function","initMixin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}